---
export interface Props {
  href?: string;
  type?: "button" | "submit" | "reset";
  variant?: "primary" | "secondary" | "outline";
  size?: "sm" | "md" | "lg";
  class?: string;
  [x: string]: any;
}

const {
  href,
  type = "button",
  variant = "primary",
  size = "md",
  class: className = "",
  ...rest
} = Astro.props;

const variants = {
  primary: "bg-green text-white hover:bg-green-dark",
  secondary: "bg-cream-dark text-green-dark hover:bg-cream-light",
  outline: "bg-transparent border-2 border-green text-green hover:bg-green hover:text-white"
};

const sizes = {
  sm: "text-sm px-3 py-1.5",
  md: "text-base px-5 py-2.5",
  lg: "text-lg px-6 py-3"
};

const classes = `inline-flex items-center justify-center rounded-md font-medium transition-colors focus:outline-none focus:ring-2 focus:ring-green focus:ring-offset-2 ${variants[variant]} ${sizes[size]} ${className}`;
---

{
  href ? (
    <a href={href} class={classes} {...rest}>
      <slot />
    </a>
  ) : (
    <button type={type} class={classes} {...rest}>
      <slot />
    </button>
  )
}